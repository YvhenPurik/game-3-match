{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "\r\n\r\nvar game = new Phaser.Game(800, 600, Phaser.AUTO, 'phaser-example', { preload: preload, create: create, update: update });\r\nlet donuts;\r\nvar newDonuts;\r\nvar donutsInfo;\r\nlet tempDonut;\r\nlet countClickDonut = 0;\r\nArray.prototype.random = function (length) {\r\n\treturn this[Math.floor((Math.random() * length))];\r\n}\r\nclass playGame extends Phaser.Scene {\r\n\tconstructor() {\r\n\t\tsuper(\"PlayGame\");\r\n\t}\r\n}\r\n// let arr =[\r\n// \t[1,3,4,5,1],\r\n// \t[2,2,5,1,1],\r\n// \t[2,3,5,5,1],\r\n// \t[2,5,2,1,3],\r\n// \t[2,1,1,3,4]\r\n// ]\r\nfunction preload() {\r\n\tgame.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n\tgame.scale.pageAlignHorizontally = true;\r\n\tgame.scale.pageAlignVertically = true;\r\n\tgame.stage.backgroundColor = '#eee';\r\n\tgame.load.spritesheet('red-donut', 'assets/img/game/gem-01.png', 193, 71);\r\n\tgame.load.spritesheet('blue-donut', 'assets/img/game/gem-02.png', 193, 71);\r\n\tgame.load.spritesheet('green-donut', 'assets/img/game/gem-03.png', 193, 71);\r\n\tgame.load.spritesheet('esyBlue-donut', 'assets/img/game/gem-04.png', 193, 71);\r\n\tgame.load.spritesheet('yellow-donut', 'assets/img/game/gem-05.png', 193, 71);\r\n\tgame.load.spritesheet('pink-donut', 'assets/img/game/gem-06.png', 193, 71);\r\n\tgame.load.image('background', 'assets/img/backgrounds/background.jpg');\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction matchVertikal(list) {\r\n\t// vertical initial match\r\n\tconst equalCol1 = list[0] == list[1] && list[1] == list[2]\r\n\t\t|| list[1] == list[2] && list[2] == list[3]\r\n\t\t|| list[2] == list[3] && list[3] == list[4];\r\n\r\n\tconst equalCol2 = list[5] == list[6] && list[6] == list[7]\r\n\t\t|| list[6] == list[7] && list[7] == list[8]\r\n\t\t|| list[7] == list[8] && list[8] == list[9];\r\n\r\n\tconst equalCol3 = list[10] == list[11] && list[11] == list[12]\r\n\t\t|| list[11] == list[12] && list[12] == list[13]\r\n\t\t|| list[12] == list[13] && list[13] == list[14];\r\n\r\n\tconst equalCol4 = list[15] == list[16] && list[16] == list[17]\r\n\t\t|| list[16] == list[17] && list[17] == list[18]\r\n\t\t|| list[17] == list[18] && list[18] == list[19];\r\n\r\n\tconst equalCol5 = list[20] == list[21] && list[21] == list[22]\r\n\t\t|| list[21] == list[22] && list[22] == list[23]\r\n\t\t|| list[22] == list[23] && list[23] == list[24]\r\n\t// horizontal initial match\r\n\tconst equalRow1 = list[0] == list[5] && list[5] == list[10]\r\n\t\t|| list[5] == list[10] && list[10] == list[15]\r\n\t\t|| list[10] == list[15] && list[15] == list[20];\r\n\r\n\tconst equalRow2 = list[1] == list[6] && list[6] == list[11]\r\n\t\t|| list[6] == list[11] && list[11] == list[16]\r\n\t\t|| list[11] == list[16] && list[16] == list[21];\r\n\r\n\tconst equalRow3 = list[2] == list[7] && list[7] == list[12]\r\n\t\t|| list[7] == list[12] && list[12] == list[17]\r\n\t\t|| list[12] == list[17] && list[17] == list[22];\r\n\r\n\tconst equalRow4 = list[3] == list[8] && list[8] == list[13]\r\n\t\t|| list[8] == list[13] && list[13] == list[18]\r\n\t\t|| list[13] == list[18] && list[18] == list[23];\r\n\r\n\tconst equalRow5 = list[4] == list[9] && list[9] == list[14]\r\n\t\t|| list[9] == list[14] && list[14] == list[19]\r\n\t\t|| list[14] == list[19] && list[19] == list[24];\r\n\r\n\tif (list.length == 25) {\r\n\t\tif (equalCol1 || equalCol2 || equalCol3 || equalCol4 || equalCol5 || equalRow1 || equalRow2 || equalRow3 || equalRow4 || equalRow5) {\r\n\t\t\tconsole.log('---------- equal---All--------->>')\r\n\t\t\treturn true\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.log('--------------Not-Equal--All')\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nfunction initDonuts() {\r\n\tlet\r\n\t\tdonutsInfo = {\r\n\t\t\twidth: 50,\r\n\t\t\theight: 50,\r\n\t\t\tcount: {\r\n\t\t\t\trow: 5,\r\n\t\t\t\tcol: 5\r\n\t\t\t},\r\n\t\t\toffset: {\r\n\t\t\t\ttop: 150,\r\n\t\t\t\tleft: 250\r\n\t\t\t},\r\n\t\t\tpadding: 30\r\n\t\t};\r\n\r\n\tdonuts = game.add.group();\r\n\t// console.log('game--initDonuts', game)\r\n\r\n\tlet arrDonuts = ['red-donut', 'blue-donut', 'green-donut', 'esyBlue-donut', 'yellow-donut', 'pink-donut',]\r\n\r\n\tfunction random_item(items) {\r\n\t\tconsole.log('items', items)\r\n\t\treturn items[Math.floor(Math.random() * items.length)];\r\n\r\n\t}\r\n\tfor (let c = 0; c < donutsInfo.count.col; c++) {\r\n\t\tfor (let r = 0; r < donutsInfo.count.row; r++) {\r\n\t\t\tvar donutX = (c * (donutsInfo.width + donutsInfo.padding)) + donutsInfo.offset.left;\r\n\t\t\tvar donutY = (r * (donutsInfo.height + donutsInfo.padding)) + donutsInfo.offset.top;\r\n\t\t\tnewDonuts = game.add.sprite(donutX, donutY, arrDonuts.random(arrDonuts.length));\r\n\t\t\tgame.physics.enable(newDonuts, Phaser.Physics.ARCADE);\r\n\t\t\tnewDonuts.body.immovable = true;\r\n\t\t\tnewDonuts.anchor.set(0.5);\r\n\t\t\tnewDonuts.inputEnabled = true;\r\n\t\t\tnewDonuts.events.onInputDown.add(listener, this);\r\n\t\t\tdonuts.add(newDonuts);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tlet key;\r\n\ttry {\r\n\t\tkey = donuts.children.map((el) => {\r\n\t\t\treturn el.key\r\n\t\t})\r\n\t} catch (error) {\r\n\r\n\t}\r\n\t// console.log('donut-key-initDonuts', key)\r\n\tif (matchVertikal(key)) {\r\n\t\tconsole.log('op recursion-->')\r\n\r\n\t\tgame.state.restart()\r\n\t\tinitDonuts()\r\n\t} else {\r\n\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nvar ball;\r\nvar background;\r\n\r\nfunction create(el) {\r\n\r\n\tgame.physics.startSystem(Phaser.Physics.ARCADE);\r\n\tgame.add.tileSprite(0, 0, 1000, 600, 'background')\r\n\r\n\tinitDonuts()\r\n\r\n\r\n}\r\nlet arrPush = [];\r\nlet firstEllPosition = {\r\n\tx: 0,\r\n\ty: 0\r\n};\r\nlet secondEllPosition = {\r\n\tx: 0,\r\n\ty: 0\r\n};\r\nfunction listener(el) {\r\n\tcountClickDonut++\r\n\tconsole.log('ael', el)\r\n\tif (countClickDonut == 1) {\r\n\t\tfirstEllPosition.x = el.position.x\r\n\t\tfirstEllPosition.y = el.position.y\r\n\r\n\t}\r\n\tif (countClickDonut > 1) {\r\n\t\tsecondEllPosition.x = el.position.x\r\n\t\tsecondEllPosition.y = el.position.y\r\n\t}\r\n\tconst horizontalStepAvailable = secondEllPosition.x - firstEllPosition.x == 160\r\n\t\t|| secondEllPosition.x - firstEllPosition.x == -160\r\n\t\t|| secondEllPosition.x - firstEllPosition.x == 240\r\n\t\t|| secondEllPosition.x - firstEllPosition.x == -240\r\n\t\t|| secondEllPosition.x - firstEllPosition.x == 320\r\n\t\t|| secondEllPosition.x - firstEllPosition.x == -320\r\n\r\n\tconst verticallStepAvailable = secondEllPosition.y - firstEllPosition.y == 160\r\n\t\t|| secondEllPosition.y - firstEllPosition.y == -160\r\n\t\t|| secondEllPosition.y - firstEllPosition.y == 240\r\n\t\t|| secondEllPosition.y - firstEllPosition.y == -240\r\n\t\t|| secondEllPosition.y - firstEllPosition.y == 320\r\n\t\t|| secondEllPosition.y - firstEllPosition.y == -320\r\n\r\n\tconsole.log('firstEllPosition  ', firstEllPosition.y, 'secondEllPosition  ', secondEllPosition.y)\r\n\tif (countClickDonut <= 2 && el.scale.x < 1.1) {\r\n\t\tarrPush.push(el)\r\n\t\tel.scale.x += 0.1\r\n\t\tel.scale.y += 0.1\r\n\t\t//console.log('www',firstEllPosition.x - secondEllPosition.x)\r\n\t\tif (countClickDonut == 2 && secondEllPosition.x - firstEllPosition.x == 80 || secondEllPosition.x - firstEllPosition.x == -80 || secondEllPosition.y - firstEllPosition.y == 80 || secondEllPosition.y - firstEllPosition.y == -80) {\r\n\t\t\tcountClickDonut = 0;\r\n\r\n\t\t\tarrPush[0].position.x = secondEllPosition.x;\r\n\t\t\tarrPush[0].position.y = secondEllPosition.y;\r\n\t\t\tarrPush[1].position.x = firstEllPosition.x;\r\n\t\t\tarrPush[1].position.y = firstEllPosition.y;\r\n\r\n\t\t\tfirstEllPosition.x = null;\r\n\t\t\tfirstEllPosition.y = null;\r\n\t\t\tsecondEllPosition.x = null;\r\n\t\t\tsecondEllPosition.y = null;\r\n\t\t\tel = arrPush.map((el) => {\r\n\t\t\t\tel.scale.x = 1\r\n\t\t\t\tel.scale.y = 1\r\n\t\t\t});\r\n\t\t\t//initDonuts()\r\n\t\t\tarrPush.length = 0\r\n\t\t} else if (horizontalStepAvailable || verticallStepAvailable) {\r\n\t\t\tcountClickDonut = 0;\r\n\t\t\tel = arrPush.map((el) => {\r\n\t\t\t\tel.scale.x = 1\r\n\t\t\t\tel.scale.y = 1\r\n\t\t\t})\r\n\t\t\tvar style = { font: \"32px Arial\", fill: \"#000000\", align: \"center\" };\r\n\t\t\tvar text = game.add.text(game.world.centerX, game.world.centerY + 270, \"incorrect choice\", style);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\ttext.destroy()\r\n\t\t\t}, 1500)\r\n\t\t\ttext.anchor.set(0.5);\r\n\t\t\tarrPush.length = 0\r\n\t\t\tfirstEllPosition.x = null;\r\n\t\t\tfirstEllPosition.y = null;\r\n\t\t\tsecondEllPosition.x = null;\r\n\t\t\tsecondEllPosition.y = null;\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.log('else')\r\n\t\tcountClickDonut = 0;\r\n\t\tel = arrPush.map((el) => {\r\n\t\t\tel.scale.x = 1\r\n\t\t\tel.scale.y = 1\r\n\t\t})\r\n\t\tarrPush.length = 0\r\n\t\tfirstEllPosition.x = null;\r\n\t\tfirstEllPosition.y = null;\r\n\t\tsecondEllPosition.x = null;\r\n\t\tsecondEllPosition.y = null;\r\n\t}\r\n\r\n\r\n}\r\n\r\nfunction update() {\r\n\r\n\r\n}\r\n"
  ]
}